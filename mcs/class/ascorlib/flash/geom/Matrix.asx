package flash.geom {

	public class Matrix {
	
		//
		// Properties
		//
	
		public property a : Number { get; set; }

 	 	public property b : Number { get; set; }

 	 	public property c : Number { get; set; }

 	 	public property d : Number { get; set; }

 	 	public property tx : Number { get; set; }

 	 	public property ty : Number { get; set; }

 	 	//
 	 	// Methods 
 	 	//
 	 	 
 	 	public function Matrix(a:Number = 1, b:Number = 0, c:Number = 0, d:Number = 1, tx:Number = 0, ty:Number = 0) {
 	 	}
 	 	
		public function clone():Matrix {
			return null;
		}
 	 	
		public function concat(m:Matrix):void {
		}

 	 	public function copyColumnFrom(column:uint, vector3D:Vector3D):void {
 	 	}
 	 	
		public function copyColumnTo(column:uint, vector3D:Vector3D):void {
		}
 	 	
		public function copyFrom(sourceMatrix:Matrix):void {
		}
 	 	
		public function copyRowFrom(row:uint, vector3D:Vector3D):void {
		}
 	 	
		public function copyRowTo(row:uint, vector3D:Vector3D):void {
		}
 	 	
		public function createBox(scaleX:Number, scaleY:Number, rotation:Number = 0, tx:Number = 0, ty:Number = 0):void {
		}
 	 	
		public function createGradientBox(width:Number, height:Number, rotation:Number = 0, tx:Number = 0, ty:Number = 0):void {
		}
 	 	
		public function deltaTransformPoint(point:Point):Point {
			return null;
		}
 	 	
		public function identity():void {
		}
 	 	
		public function invert():void {
		}
 	 	
		public function rotate(angle:Number):void {
		}
 	 	
		public function scale(sx:Number, sy:Number):void {
		}
 	 	
		public function setTo(aa:Number, ba:Number, ca:Number, da:Number, txa:Number, tya:Number):void {
		}
 	 	
		public function toString():String {
			return null;
		}
 	 	 
		public function transformPoint(point:Point):Point {
			return null;
		}
 	 	
		public function translate(dx:Number, dy:Number):void {
		}
	
	}


}
