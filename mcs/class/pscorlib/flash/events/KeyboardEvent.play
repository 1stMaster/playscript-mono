// Copyright 2013 Zynga Inc.
//	
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//		
//      Unless required by applicable law or agreed to in writing, software
//      distributed under the License is distributed on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//      See the License for the specific language governing permissions and
//      limitations under the License.

package flash.events {

	public class KeyboardEvent extends Event {
	
		//
		// Constants
		//
 	 	
 	 	public static const KEY_DOWN : String = "keyDown";

 	 	public static const KEY_UP : String = "keyUp";
	
		//
		// Properties
		//
	
		public property altKey : Boolean { get; set; }

 	 	public property charCode : uint { get; set; }

 	 	public property commandKey : Boolean { get; set; }

 	 	public property controlKey : Boolean { get; set; }

 	 	public property ctrlKey : Boolean { get; set; }

 	 	public property keyCode : uint { get; set; }

 	 	public property keyLocation : uint { get; set; }

 	 	public property shiftKey : Boolean { get; set; }

 	 	//
 	 	// Methods
 	 	// 
 	 		
 	 	public function KeyboardEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = false, 
 	 	 	charCodeValue:uint = 0, keyCodeValue:uint = 0, keyLocationValue:uint = 0, ctrlKeyValue:Boolean = false, altKeyValue:Boolean = false, 
 	 		shiftKeyValue:Boolean = false, controlKeyValue:Boolean = false, commandKeyValue:Boolean = false) {
 	 		super(type);

			charCode = charCodeValue;
			keyCode = keyCodeValue;
			keyLocation = keyLocationValue;
			ctrlKey = ctrlKeyValue;
			altKey = altKeyValue;
			shiftKey = shiftKeyValue;
			controlKey = controlKeyValue;
			commandKey = commandKeyValue;
 	 	}

 	 	public override function clone():Event {
 	 		return null;
 	 	}

		public override function toString():String {
			return null;
		}

		public function updateAfterEvent():void {
		}
	
	}

}
